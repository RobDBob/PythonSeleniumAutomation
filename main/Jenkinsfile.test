#!groovy
@Library('utils') _

pipelineTriggersVar = []

properties(
	pipelineTriggersVar
)

pipeline {
	options {
			// timeout job after 23 hrs
			timeout(time: 23, unit: 'HOURS')
	}

	agent {
		// run creation and post cleanup on anything that's
		// env-dev
		label 'env-dev'
	}

	environment {
		// these are not specifically needed for this jenkins job at the moment but could turn useful later
		AWS_ACCOUNT = sh(returnStdout: true, script: "aws sts get-caller-identity --output text --query 'Account'").trim()
		AWS_REGION = sh(returnStdout: true, script: "curl -s http://111.111.111.111/latest/meta-data/placement/availability-zone | sed 's/\\(.*\\)[a-z]/\\1/'").trim()
		SHORTCOMMIT = sh(returnStdout: true, script: "git log -n 1 --pretty=format:'%h'").trim()

		logDropFolder = "lens48/build_${env.BUILD_NUMBER}_${params.TargetEnvironment}"
		nexusRepository = "test-logs"
		testLogsFileName = "test_logs.zip"
		testScreenshotFileName = "screenshots.zip"
	}

	stages {
		stage('Activate testautomation node') {
			steps {
				sh "aws autoscaling set-desired-capacity --auto-scaling-group-name jenkins-slave-testautomation-dev-ecs-2-JenkinsSlaveECSScalingGroup-1AKK7RRCFA0KP  --desired-capacity 1 --region us-east-1"
			}
		}

		stage('Run Automated Test Suite') {
			agent {
				// agent is selenium-based but we need a few more requirements in it, so we use our own dockerfile
				// this requires SYS_ADMIN capability for chromium in the container (see https://github.com/jessfraz/dockerfiles/issues/65)
				dockerfile {
                    filename 'Dockerfile'
                    args '--cap-add=SYS_ADMIN --shm-size 2GB'
                    label 'us-east-1 && env-dev && testautomation-power'
				}
			}
			steps {
                sh "./RunTestSuite.sh rob 123 ${env.nexusRepository}:${env.logDropFolder} 'robert.deringer@company.com'"

                script {
                    if (fileExists('test_logs.zip')) {
                        nexus.publish(
                            type: 'raw',
                            env: 'prod',
                            credentials: nexus.getCredentials('us-east-1', 'prod'),
                            repository: "${env.nexusRepository}",
                            source_file: "${env.testLogsFileName}",
                            folder: "${env.logDropFolder}"
                        )
                    }
                }
                script {
                    if (fileExists('screenshots.zip')) {
                        nexus.publish(
                            type: 'raw',
                            env: 'prod',
                            credentials: nexus.getCredentials('us-east-1', 'prod'),
                            repository: "${env.nexusRepository}",
                            source_file: "${env.testScreenshotFileName}",
                            folder: "${env.logDropFolder}"
                        )
                    }
                }
			}
		}
	}
	post {
			always {
				sh "aws autoscaling set-desired-capacity --auto-scaling-group-name jenkins-slave-testautomation-dev-ecs-2-JenkinsSlaveECSScalingGroup-1AKK7RRCFA0KP  --desired-capacity 0 --region us-east-1"
			}
	}
}